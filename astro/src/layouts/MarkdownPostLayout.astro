---
import { Image } from "astro:assets";
import FormattedDate from "@components/FormattedDate.astro";
import PostMeta from "@components/ui/meta/PostMeta.astro";
import PostNav from "@components/ui/nav/PostNav.astro";
import ShareButtons from "@components/ui/share/ShareButtons.astro";
import LandingPageLayout from "@layouts/LandingPage.astro";

const {
  title,
  description,
  pubDate,
  author,
  updatedDate,
  heroImage,
  showHeader = true,
  prevPost = null,
  nextPost = null,
  readingTimeMin = 0,
  tags = [],
} = Astro.props as Props;
---

<LandingPageLayout {title}>
  <section class="container">
    <article class="post">
      {
        showHeader && heroImage && (
          <div class="post-hero">
            <Image
              width={1280}
              height={720}
              src={heroImage}
              alt={title}
              class="post-hero-img"
            />
          </div>
        )
      }

      <header class="post-header">
        <h1 class="post-title">{title}</h1>
        <div class="post-date">
          <FormattedDate date={pubDate} />
          {
            updatedDate && (
              <span class="last-updated">
                â€¢ Updated <FormattedDate date={updatedDate} />
              </span>
            )
          }
        </div>
        <PostMeta
          pubDate={pubDate}
          readingTimeMin={readingTimeMin}
          authorName={author || "Site Author"}
        />
      </header>

      <div class="prose">
        <slot />
      </div>

      {
        tags.length > 0 && (
          <div class="post-tags">
            {tags.map((t) => (
              <a href={`/blog/tag/${t.toLowerCase()}/`} class="tag">
                {t}
              </a>
            ))}
          </div>
        )
      }

      <div class="post-footer">
        <ShareButtons title={title} url={Astro.url.toString()} />
        <PostNav prev={prevPost} next={nextPost} />
      </div>
    </article>
  </section>
</LandingPageLayout>

<style>
  .post {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .post-hero {
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }
  .post-hero-img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  .post-header {
    text-align: center;
    max-width: 720px;
    margin: 0 auto;
  }

  .post-title {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 800;
    margin: 0 0 0.5rem 0;
    color: var(--color-text);
  }

  .post-date {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    margin-bottom: 1rem;
  }
  .last-updated {
    margin-left: 0.5rem;
    font-style: italic;
  }

  .prose {
    max-width: 720px;
    margin: 0 auto;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 2rem;
  }
  .tag {
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    border-radius: 9999px;
    background: rgba(var(--accent-rgb), 0.1);
    color: var(--accent);
    text-decoration: none;
    transition: background 0.2s ease;
  }
  .tag:hover {
    background: rgba(var(--accent-rgb), 0.2);
  }

  .post-footer {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    margin-top: 2rem;
  }
</style>
