---
interface Props {
  variant?: 'primary' | 'secondary' | 'ghost' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
}

const {
  variant = 'primary',
  size = 'md',
  href,
  type = 'button',
  disabled = false,
  class: className,
  ...rest
} = Astro.props as Props;

const Tag = href ? 'a' : 'button';
const classes = ['btn', `btn--${variant}`, `btn--${size}`, className]
  .filter(Boolean)
  .join(' ');
---

<Tag
  class={classes}
  href={href}
  type={!href ? type : undefined}
  aria-disabled={disabled ? 'true' : undefined}
  {...rest}
>
  <slot />
</Tag>

<style>
/* Base */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.5rem; /* rounded-lg */
  font-weight: 600; /* font-semibold */
  text-decoration: none; /* no-underline */
  transition: background-color 0.2s, color 0.2s, opacity 0.2s;
}

/* Sizes */
.btn--sm {
  padding: 0.5rem 0.75rem; /* px-3 py-2 */
  font-size: 0.875rem; /* text-sm */
}
.btn--md {
  padding: 0.625rem 1rem; /* px-4 py-2.5 */
  font-size: 1rem; /* text-base */
}
.btn--lg {
  padding: 0.75rem 1.25rem; /* px-5 py-3 */
  font-size: 1.125rem; /* text-lg */
}

/* Variants */
.btn--primary {
  background: var(--accent);
  color: white;
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
}
.btn--primary:hover,
.btn--primary:focus {
  opacity: 0.9;
  color: white;
}

.btn--secondary {
  color: var(--accent);
  border: 1px solid var(--accent);
  background: transparent;
}
.btn--secondary:hover {
  background: var(--color-accent-bg);
}

.btn--ghost {
  color: var(--accent);
  background: transparent;
}
.btn--ghost:hover {
  background: rgba(var(--accent), 0.1);
}

.btn--outline {
  color: var(--accent);
  border: 1px solid var(--accent);
  background: transparent;
}
.btn--outline:hover {
  background: var(--accent);
}

/* Disabled state */
.btn[aria-disabled="true"] {
  opacity: 0.5;
  pointer-events: none;
  cursor: not-allowed;
}
</style>
